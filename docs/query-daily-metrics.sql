-- =====================================================
-- Script para consultar m√©tricas diarias con ordenamiento
-- OneSite - Auditor√≠a de Seguridad
-- =====================================================

USE OneSiteDW;
GO

-- =====================================================
-- Consulta de m√©tricas diarias con ordenamiento
-- =====================================================

-- M√©tricas diarias ordenadas por fecha (m√°s reciente primero)
SELECT 
    metric_date,
    SUM(total_logins) as total_logins,
    SUM(successful_logins) as successful_logins,
    SUM(failed_logins) as failed_logins,
    SUM(account_lockouts) as account_lockouts,
    AVG(avg_response_time_ms) as avg_response_time,
    CASE 
        WHEN SUM(total_logins) > 0 
        THEN CAST((SUM(successful_logins) * 100.0 / SUM(total_logins)) AS DECIMAL(5,2))
        ELSE 0 
    END as success_rate_percent
FROM security_metrics
WHERE metric_date >= DATEADD(DAY, -30, CAST(GETDATE() AS DATE))
GROUP BY metric_date
ORDER BY metric_date DESC;

-- =====================================================
-- Resumen de m√©tricas de los √∫ltimos 7 d√≠as
-- =====================================================

SELECT 
    '√öltimos 7 d√≠as' as periodo,
    SUM(total_logins) as total_logins,
    SUM(successful_logins) as successful_logins,
    SUM(failed_logins) as failed_logins,
    SUM(account_lockouts) as account_lockouts,
    AVG(avg_response_time_ms) as avg_response_time_ms,
    CASE 
        WHEN SUM(total_logins) > 0 
        THEN CAST((SUM(successful_logins) * 100.0 / SUM(total_logins)) AS DECIMAL(5,2))
        ELSE 0 
    END as success_rate_percent
FROM security_metrics
WHERE metric_date >= DATEADD(DAY, -7, CAST(GETDATE() AS DATE))

UNION ALL

-- Resumen de m√©tricas de los √∫ltimos 30 d√≠as
SELECT 
    '√öltimos 30 d√≠as' as periodo,
    SUM(total_logins) as total_logins,
    SUM(successful_logins) as successful_logins,
    SUM(failed_logins) as failed_logins,
    SUM(account_lockouts) as account_lockouts,
    AVG(avg_response_time_ms) as avg_response_time_ms,
    CASE 
        WHEN SUM(total_logins) > 0 
        THEN CAST((SUM(successful_logins) * 100.0 / SUM(total_logins)) AS DECIMAL(5,2))
        ELSE 0 
    END as success_rate_percent
FROM security_metrics
WHERE metric_date >= DATEADD(DAY, -30, CAST(GETDATE() AS DATE));

-- =====================================================
-- M√©tricas por hora del d√≠a actual
-- =====================================================

SELECT 
    metric_hour,
    total_logins,
    successful_logins,
    failed_logins,
    account_lockouts,
    avg_response_time_ms,
    CASE 
        WHEN total_logins > 0 
        THEN CAST((successful_logins * 100.0 / total_logins) AS DECIMAL(5,2))
        ELSE 0 
    END as success_rate_percent
FROM security_metrics
WHERE metric_date = CAST(GETDATE() AS DATE)
ORDER BY metric_hour;

-- =====================================================
-- Top 10 d√≠as con m√°s intentos de login
-- =====================================================

SELECT TOP 10
    metric_date,
    SUM(total_logins) as total_logins,
    SUM(successful_logins) as successful_logins,
    SUM(failed_logins) as failed_logins,
    CASE 
        WHEN SUM(total_logins) > 0 
        THEN CAST((SUM(successful_logins) * 100.0 / SUM(total_logins)) AS DECIMAL(5,2))
        ELSE 0 
    END as success_rate_percent
FROM security_metrics
WHERE metric_date >= DATEADD(DAY, -90, CAST(GETDATE() AS DATE))
GROUP BY metric_date
ORDER BY SUM(total_logins) DESC;

-- =====================================================
-- D√≠as con mayor tasa de fallos (posibles ataques)
-- =====================================================

SELECT TOP 10
    metric_date,
    SUM(total_logins) as total_logins,
    SUM(successful_logins) as successful_logins,
    SUM(failed_logins) as failed_logins,
    CASE 
        WHEN SUM(total_logins) > 0 
        THEN CAST((SUM(failed_logins) * 100.0 / SUM(total_logins)) AS DECIMAL(5,2))
        ELSE 0 
    END as failure_rate_percent
FROM security_metrics
WHERE metric_date >= DATEADD(DAY, -90, CAST(GETDATE() AS DATE))
    AND SUM(total_logins) > 10  -- Solo d√≠as con actividad significativa
GROUP BY metric_date
ORDER BY (SUM(failed_logins) * 100.0 / SUM(total_logins)) DESC;

PRINT '‚úÖ Consultas de m√©tricas ejecutadas exitosamente';
PRINT 'üìä M√©tricas disponibles:';
PRINT '   - M√©tricas diarias ordenadas';
PRINT '   - Resumen de 7 y 30 d√≠as';
PRINT '   - M√©tricas por hora del d√≠a actual';
PRINT '   - Top 10 d√≠as con m√°s actividad';
PRINT '   - D√≠as con mayor tasa de fallos'; 